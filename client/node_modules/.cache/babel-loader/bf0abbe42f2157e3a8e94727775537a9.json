{"ast":null,"code":"var _jsxFileName = \"/home/kunal/Documents/Blink-Exchange  (Local Copy)/react test/blink-exchange/src/containers/BuyForm.jsx\";\nimport React, { Component } from \"react\";\n/* Import Components */\n\nimport CheckBox from \"../components/CheckBox\";\nimport Input from \"../components/Input\";\nimport TextArea from \"../components/TextArea\";\nimport Select from \"../components/Select\";\nimport Button from \"../components/Button\";\nimport \"\";\n\nclass BuyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: {\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\"\n      },\n      genderOptions: [\"Male\", \"Female\", \"Others\"],\n      skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n    };\n    this.handleTextArea = this.handleTextArea.bind(this);\n    this.handleAge = this.handleAge.bind(this);\n    this.handleFullName = this.handleFullName.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  /* This lifecycle hook gets executed when the component mounts */\n\n\n  handleFullName(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        name: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleAge(e) {\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        age: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        [name]: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleTextArea(e) {\n    console.log(\"Inside handleTextArea\");\n    let value = e.target.value;\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        about: value\n      }\n    }), () => console.log(this.state.newUser));\n  }\n\n  handleCheckBox(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if (this.state.newUser.skills.indexOf(newSelection) > -1) {\n      newSelectionArray = this.state.newUser.skills.filter(s => s !== newSelection);\n    } else {\n      newSelectionArray = [...this.state.newUser.skills, newSelection];\n    }\n\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser,\n        skills: newSelectionArray\n      }\n    }));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n    fetch(\"172.16.38.62:8080/apis/post/buy\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      newUser: {\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\"\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"container-fluid\",\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputType: \"text\",\n      title: \"Full Name\",\n      name: \"name\",\n      value: this.state.newUser.name,\n      placeholder: \"Enter your name\",\n      handleChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      inputType: \"number\",\n      name: \"age\",\n      title: \"Age\",\n      value: this.state.newUser.age,\n      placeholder: \"Enter your age\",\n      handleChange: this.handleAge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \" \", React.createElement(Select, {\n      title: \"Gender\",\n      name: \"gender\",\n      options: this.state.genderOptions,\n      value: this.state.newUser.gender,\n      placeholder: \"Select Gender\",\n      handleChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), \" \", React.createElement(CheckBox, {\n      title: \"Skills\",\n      name: \"skills\",\n      options: this.state.skillOptions,\n      selectedOptions: this.state.newUser.skills,\n      handleChange: this.handleCheckBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), \" \", React.createElement(TextArea, {\n      title: \"About you.\",\n      rows: 10,\n      value: this.state.newUser.about,\n      name: \"currentPetInfo\",\n      handleChange: this.handleTextArea,\n      placeholder: \"Describe your past experience and skills\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Button, {\n      action: this.handleFormSubmit,\n      type: \"primary\",\n      title: \"Submit\",\n      style: buttonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), \" \", React.createElement(Button, {\n      action: this.handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), \" \");\n  }\n\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default BuyForm;","map":{"version":3,"sources":["/home/kunal/Documents/Blink-Exchange  (Local Copy)/react test/blink-exchange/src/containers/BuyForm.jsx"],"names":["React","Component","CheckBox","Input","TextArea","Select","Button","BuyForm","constructor","props","state","newUser","name","age","gender","skills","about","genderOptions","skillOptions","handleTextArea","bind","handleAge","handleFullName","handleFormSubmit","handleClearForm","handleCheckBox","handleInput","e","value","target","setState","prevState","console","log","newSelection","newSelectionArray","indexOf","filter","s","preventDefault","userData","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","data","render","buttonStyle","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n/* Import Components */\nimport CheckBox from \"../components/CheckBox\";\nimport Input from \"../components/Input\";\nimport TextArea from \"../components/TextArea\";\nimport Select from \"../components/Select\";\nimport Button from \"../components/Button\";\nimport \"\"\n\nclass BuyForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newUser: {\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\"\n      },\n\n      genderOptions: [\"Male\", \"Female\", \"Others\"],\n      skillOptions: [\"Programming\", \"Development\", \"Design\", \"Testing\"]\n    };\n    this.handleTextArea = this.handleTextArea.bind(this);\n    this.handleAge = this.handleAge.bind(this);\n    this.handleFullName = this.handleFullName.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleClearForm = this.handleClearForm.bind(this);\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleFullName(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          name: value\n        }\n      }),\n      () => console.log(this.state.newUser)\n    );\n  }\n\n  handleAge(e) {\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          age: value\n        }\n      }),\n      () => console.log(this.state.newUser)\n    );\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          [name]: value\n        }\n      }),\n      () => console.log(this.state.newUser)\n    );\n  }\n\n  handleTextArea(e) {\n    console.log(\"Inside handleTextArea\");\n    let value = e.target.value;\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          about: value\n        }\n      }),\n      () => console.log(this.state.newUser)\n    );\n  }\n\n  handleCheckBox(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if (this.state.newUser.skills.indexOf(newSelection) > -1) {\n      newSelectionArray = this.state.newUser.skills.filter(\n        s => s !== newSelection\n      );\n    } else {\n      newSelectionArray = [...this.state.newUser.skills, newSelection];\n    }\n\n    this.setState(prevState => ({\n      newUser: { ...prevState.newUser, skills: newSelectionArray }\n    }));\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    let userData = this.state.newUser;\n\n    fetch(\"172.16.38.62:8080/apis/post/buy\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"Successful\" + data);\n      });\n    });\n  }\n\n  handleClearForm(e) {\n    e.preventDefault();\n    this.setState({\n      newUser: {\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        skills: [],\n        about: \"\"\n      }\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        <Input\n          inputType={\"text\"}\n          title={\"Full Name\"}\n          name={\"name\"}\n          value={this.state.newUser.name}\n          placeholder={\"Enter your name\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Name of the user */}\n        <Input\n          inputType={\"number\"}\n          name={\"age\"}\n          title={\"Age\"}\n          value={this.state.newUser.age}\n          placeholder={\"Enter your age\"}\n          handleChange={this.handleAge}\n        />{\" \"}\n        {/* Age */}\n        <Select\n          title={\"Gender\"}\n          name={\"gender\"}\n          options={this.state.genderOptions}\n          value={this.state.newUser.gender}\n          placeholder={\"Select Gender\"}\n          handleChange={this.handleInput}\n        />{\" \"}\n        {/* Age Selection */}\n        <CheckBox\n          title={\"Skills\"}\n          name={\"skills\"}\n          options={this.state.skillOptions}\n          selectedOptions={this.state.newUser.skills}\n          handleChange={this.handleCheckBox}\n        />{\" \"}\n        {/* Skill */}\n        <TextArea\n          title={\"About you.\"}\n          rows={10}\n          value={this.state.newUser.about}\n          name={\"currentPetInfo\"}\n          handleChange={this.handleTextArea}\n          placeholder={\"Describe your past experience and skills\"}\n        />\n        {/* About you */}\n        <Button\n          action={this.handleFormSubmit}\n          type={\"primary\"}\n          title={\"Submit\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/*Submit */}\n        <Button\n          action={this.handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        {/* Clear the form */}\n      </form>\n    );\n  }\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default BuyForm;\n"]},"metadata":{},"sourceType":"module"}